> This file contains the generic templates to use for properties of particular types.
> It is copied to the output because it has the locale in it.
> They are called by property specific .lg files.

> TODO: The turn parameters are because of a bug in the LG engine where parameterized templates do not have access to the
> global scopes.  There is a DCR filed and when fized we should revert here and in the calls to this.

>>> Ask prompts <<<

> TODO: We should look at the schema and if a few items list them or do cards or..
# askEnum(property)
- Which value do you want for {template(concat(property, 'Name'))}?

# askNumber(property)
- IF: {turn.schema.properties[property].minimum && turn.schema.properties[property].maximum}
- Enter a number for {template(concat(property, 'Name'))} between {turn.schema.properties[property].minimum} and {turn.schema.properties[property].maximum}:
- ELSE:
- Enter a number for {template(concat(property, 'Name'))}:

# askString(property)
- Enter a value for {template(concat(property, 'Name'))}

>>> Help messages <<<
# helpProperty(property)
- Possible values for {template(concat(property, 'Name'))} include: \[{join(turn.schema.properties[property].enum, ',')}\]

# clarifyEnum(property)
- Please choose a value for {name} from \[{join(foreach(turn.dialogEvent.value.entity.value, val, bread(val)), ',')}\]

# cancel
- Do you want to end the conversation? (yes/no)

# unexpectedPropertySet(property, entity, name)
- {name} is set as {toLower(entity)}.

# unexpectedPropertyChange(property, entity, name, oldentity)
- {name} is changed from {toLower(oldentity)} to {toLower(entity)}.

# chooseProperties
- Did you mean {join(foreach(turn.dialogevent.value, choice, chooseProperty(choice)), " or ")}

# chooseProperty(property)
- "{property.entity.text}" as {property.property}

# readForm
- {join(foreach(dialog.requiredProperties, property, readingProperty(property)), ', ')}

# readingProperty(property)
- {toLower(property)}={dialog[property]}

# changeSlot
- Is there any slot you want to change? (yes/no)